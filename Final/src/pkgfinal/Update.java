/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pkgfinal;


import java.sql.Statement;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.SwingUtilities;

public class Update extends javax.swing.JFrame {
  Connection con;
   PreparedStatement pst;
   ResultSet rs=null;
    /**
     * Creates new form Update
     */
    public Update() {
        initComponents();
          String url= "jdbc:mysql://localhost/ab_database";
        String user="root";
        String pass="";
        try{
            con = DriverManager.getConnection(url,user,pass);
        }catch(Exception ex){
            System.out.println("Error: "+ ex.getMessage());
        }
        updateDB();
        curdateTime();
         
        nm.setVisible(false);
          
     tp.setVisible(false);
      plus.setVisible(false);
       pr.setVisible(false);
        info.setVisible(false);
         pi.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableE = new javax.swing.JTable();
        id = new javax.swing.JTextField();
        nm = new javax.swing.JTextField();
        tp = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        pr = new javax.swing.JTextField();
        info = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        time = new javax.swing.JLabel();
        sr = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        plus = new javax.swing.JTextField();
        newq = new javax.swing.JTextField();
        wheel = new javax.swing.JComboBox<>();
        pi = new javax.swing.JTextField();
        in = new javax.swing.JLabel();
        pid = new javax.swing.JLabel();
        qn = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(1001, 735));
        jPanel1.setLayout(null);

        tableE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Type", "Quantity", "Price"
            }
        ));
        tableE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableEMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableE);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(260, 170, 720, 480);
        jPanel1.add(id);
        id.setBounds(640, 210, 68, 26);

        nm.setBackground(new java.awt.Color(153, 153, 153));
        nm.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nm.setForeground(new java.awt.Color(0, 0, 0));
        nm.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        nm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nmActionPerformed(evt);
            }
        });
        jPanel1.add(nm);
        nm.setBounds(80, 150, 110, 30);

        tp.setBackground(new java.awt.Color(153, 153, 153));
        tp.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tp.setForeground(new java.awt.Color(0, 0, 0));
        tp.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(tp);
        tp.setBounds(80, 220, 110, 30);

        jButton1.setBackground(new java.awt.Color(102, 102, 102));
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Save");
        jButton1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton1.setPreferredSize(new java.awt.Dimension(79, 27));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(30, 610, 79, 27);

        pr.setBackground(new java.awt.Color(153, 153, 153));
        pr.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pr.setForeground(new java.awt.Color(0, 0, 0));
        pr.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(pr);
        pr.setBounds(80, 350, 110, 30);

        info.setBackground(new java.awt.Color(153, 153, 153));
        info.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        info.setForeground(new java.awt.Color(0, 0, 0));
        info.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(info);
        info.setBounds(80, 470, 110, 30);

        jButton2.setBackground(new java.awt.Color(102, 102, 102));
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setText("Records");
        jButton2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton2.setPreferredSize(new java.awt.Dimension(79, 27));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(140, 610, 79, 27);
        jPanel1.add(time);
        time.setBounds(860, 70, 150, 20);

        sr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                srKeyPressed(evt);
            }
        });
        jPanel1.add(sr);
        sr.setBounds(330, 100, 490, 26);

        jButton3.setBackground(new java.awt.Color(0, 204, 255));
        jButton3.setFont(new java.awt.Font("Perpetua", 1, 14)); // NOI18N
        jButton3.setText("Back");
        jButton3.setToolTipText("");
        jButton3.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(920, 20, 60, 30);

        plus.setBackground(new java.awt.Color(153, 153, 153));
        plus.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        plus.setForeground(new java.awt.Color(0, 0, 0));
        plus.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(plus);
        plus.setBounds(80, 290, 110, 30);
        jPanel1.add(newq);
        newq.setBounds(590, 500, 110, 26);

        wheel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose", "In", "Out", "Others Info Changed" }));
        wheel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wheelActionPerformed(evt);
            }
        });
        jPanel1.add(wheel);
        wheel.setBounds(70, 420, 130, 26);

        pi.setBackground(new java.awt.Color(153, 153, 153));
        pi.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pi.setForeground(new java.awt.Color(0, 0, 0));
        pi.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                piActionPerformed(evt);
            }
        });
        jPanel1.add(pi);
        pi.setBounds(80, 540, 110, 30);

        in.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(in);
        in.setBounds(120, 390, 37, 16);
        jPanel1.add(pid);
        pid.setBounds(100, 120, 37, 16);

        qn.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(qn);
        qn.setBounds(200, 300, 37, 16);

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Id:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(80, 120, 20, 16);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkgfinal/Price (2).png"))); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, -10, 1050, 920);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1001, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void updateDB(){
       String sql="SELECT * FROM prod_table";
          try{
         PreparedStatement pst = con.prepareStatement(sql);
         ResultSet rs=pst.executeQuery();
         DefaultTableModel model= (DefaultTableModel)tableE.getModel();
         model.setRowCount(0);
         while(rs.next()){
             model.addRow(new String[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
         }
        }catch(Exception ex){
            System.out.println("Error: "+ ex.getMessage());
            
        }
}
public void curdateTime(){
    DateTimeFormatter dtf= DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
    LocalDateTime now= LocalDateTime.now();
    time.setText(dtf.format(now));
}





    private void tableEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEMouseClicked
    int id=Integer.parseInt(tableE.getValueAt(tableE.getSelectedRow(),0).toString());
    nm.setVisible(true);
     tp.setVisible(true);
      plus.setVisible(true);
       pr.setVisible(true);
        info.setVisible(true);
         pi.setVisible(true);
          
  try{
       Class.forName("com.mysql.cj.jdbc.Driver");
    con =DriverManager.getConnection("jdbc:mysql://localhost/ab_database", "root","");
    Statement st=con.createStatement();
    rs = st.executeQuery("SELECT * FROM prod_table WHERE id="+id);
    while(rs.next()){
        pid.setText(rs.getString("id"));
        nm.setText(rs.getString("Name"));
        tp.setText(rs.getString("Type"));
        qn.setText(rs.getString("Quantity"));
        pr.setText(rs.getString("Price"));
    }
  }catch(Exception ex){
            System.out.println("Error: "+ ex.getMessage());
  }
    }//GEN-LAST:event_tableEMouseClicked

    private void nmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nmActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     int id=Integer.parseInt(tableE.getValueAt(tableE.getSelectedRow(),0).toString());
     
      int confirmUpdate = JOptionPane.showConfirmDialog(this, "Are you sure you want to update the selected row?", "Confirmation", JOptionPane.YES_NO_OPTION);
    if (in.getText().isEmpty() || info.getText().isEmpty() || pi.getText().isEmpty() || plus.getText().isEmpty()) {
    JOptionPane.showMessageDialog(this, "Please fill in all the required fields (in, info, pi, plus) before proceeding.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
    }
      try{
           if (confirmUpdate == JOptionPane.YES_OPTION) {
       Class.forName("com.mysql.cj.jdbc.Driver");
    con =DriverManager.getConnection("jdbc:mysql://localhost/ab_database", "root","");
    Statement st=con.createStatement();
  
int selectedOperationIndex = wheel.getSelectedIndex();
       
        ResultSet rs = st.executeQuery("SELECT Quantity FROM prod_table WHERE id=" + id);
      if ( rs.next());
        int currentQuantity = rs.getInt("Quantity");

        int newQuantity;
        if (selectedOperationIndex == 1) {
      
            newQuantity = currentQuantity + Integer.parseInt(plus.getText());
        } else if (selectedOperationIndex == 2) {
        
            newQuantity = currentQuantity - Integer.parseInt(plus.getText());
        } else {
      
            newQuantity = currentQuantity;
        }
      
        boolean b = st.execute("UPDATE prod_table SET Name='" + nm.getText() + "',Type='" + tp.getText() + "',Quantity='" + newQuantity + "',Price='" + pr.getText() + "',DateTime='" + time.getText() + "' WHERE id=" + id);
      
    int confirmSaveToOtherDB = JOptionPane.showConfirmDialog(this, "Do you want to save the changes to another database?", "Confirmation", JOptionPane.YES_NO_OPTION);

   if (confirmSaveToOtherDB == JOptionPane.YES_OPTION) {
        String sql = "INSERT INTO prod_record(pid, Name, Type, Prev_Quan, Quan, Qa_s, price, in_out, info, Pio, Date) VALUES (?,?,?,?,?,?,?,?,?,?,?)";
    con = DriverManager.getConnection("jdbc:mysql://localhost/ab_database", "root", "");
    pst = con.prepareStatement(sql);

    pst.setString(1, pid.getText());
    pst.setString(2, nm.getText());
    pst.setString(3, tp.getText());
 pst.setString(4, qn.getText());
  pst.setInt(5, newQuantity);
    pst.setString(6, plus.getText());
    pst.setString(7, pr.getText());
    pst.setString(8, in.getText());
     pst.setString(9, info.getText());
      pst.setString(10, pi.getText());
       pst.setString(11, time.getText());

    pst.executeUpdate();

    JOptionPane.showMessageDialog(this, "Updated Successfully");
    nm.setText("");
    tp.setText("");
    qn.setText("");
    pr.setText("");
    in.setText("");
    info.setText("");
    pi.setText("");
     plus.setText("");
     updateDB();
   }else{
       
   
    if(!b){
        updateDB();
    }
   }
    
   }else{
        JOptionPane.showMessageDialog(this, "Update!Cancelled.");
    }
     }catch(Exception ex){
            System.out.println("Error: "+ ex.getMessage());
  }
     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      History ab = new History();
     ab.setVisible(true);
     ab.setLocationRelativeTo(null);
     dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void srKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srKeyPressed
     DefaultTableModel obj=(DefaultTableModel)tableE.getModel();
    TableRowSorter<DefaultTableModel> obj1=new TableRowSorter<>(obj);
    tableE.setRowSorter(obj1);
    obj1.setRowFilter(RowFilter.regexFilter(sr.getText()));
    }//GEN-LAST:event_srKeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     Table ad = new Table();
     ad.setVisible(true);
     ad.setLocationRelativeTo(null);
     dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void wheelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wheelActionPerformed
        String selectvalue= wheel.getSelectedItem().toString();
        in.setText(selectvalue);
    }//GEN-LAST:event_wheelActionPerformed

    private void piActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_piActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_piActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Update().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField id;
    private javax.swing.JLabel in;
    private javax.swing.JTextField info;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField newq;
    private javax.swing.JTextField nm;
    private javax.swing.JTextField pi;
    private javax.swing.JLabel pid;
    private javax.swing.JTextField plus;
    private javax.swing.JTextField pr;
    private javax.swing.JLabel qn;
    private javax.swing.JTextField sr;
    private javax.swing.JTable tableE;
    private javax.swing.JLabel time;
    private javax.swing.JTextField tp;
    private javax.swing.JComboBox<String> wheel;
    // End of variables declaration//GEN-END:variables
}
